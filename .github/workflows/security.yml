name: 🔒 Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # ===============================
  # Dependency Vulnerability Scan
  # ===============================
  dependency-scan:
    name: 🔍 Dependency Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.16.0'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🔍 Run npm audit
      run: |
        npm audit --audit-level=high
        npm audit fix --dry-run
        
    - name: 🔒 Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  # ===============================
  # Code Security Analysis
  # ===============================
  code-scan:
    name: 🕵️ Code Security
    runs-on: ubuntu-latest
    
    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, typescript
        
    - name: 🏗️ Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  # ===============================
  # Secret Detection
  # ===============================
  secret-scan:
    name: 🤫 Secret Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔍 TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  # ===============================
  # Docker Security Scan
  # ===============================
  docker-scan:
    name: 🐳 Docker Security
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    strategy:
      matrix:
        service: [backend, frontend]
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🏗️ Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/${{ matrix.service }}.Dockerfile
        tags: zenith-${{ matrix.service }}:test
        load: true
        
    - name: 🔒 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: zenith-${{ matrix.service }}:test
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  # ===============================
  # Infrastructure as Code Scan
  # ===============================
  iac-scan:
    name: 🏗️ Infrastructure Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: dockerfile,github_actions
        output_format: sarif
        output_file_path: checkov-results.sarif
        
    - name: 📤 Upload Checkov scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: checkov-results.sarif

  # ===============================
  # Security Report
  # ===============================
  security-report:
    name: 📊 Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, secret-scan, docker-scan, iac-scan]
    if: always()
    
    steps:
    - name: 📋 Generate Security Report
      run: |
        echo "# 🔒 Security Scan Results" > security-report.md
        echo "" >> security-report.md
        echo "## 📊 Scan Summary" >> security-report.md
        echo "- **Dependency Scan**: ${{ needs.dependency-scan.result }}" >> security-report.md
        echo "- **Code Analysis**: ${{ needs.code-scan.result }}" >> security-report.md
        echo "- **Secret Detection**: ${{ needs.secret-scan.result }}" >> security-report.md
        echo "- **Docker Security**: ${{ needs.docker-scan.result }}" >> security-report.md
        echo "- **Infrastructure**: ${{ needs.iac-scan.result }}" >> security-report.md
        echo "" >> security-report.md
        echo "**Report generated on**: $(date)" >> security-report.md
        
    - name: 📤 Upload Security Report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: security-report.md